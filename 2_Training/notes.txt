exp3: default, 40 epochs, train only last fc layer
 > increase numworkers or batchsize when only training last layer (current util ~23%)
 > experiment with different learning rates
exp4: change learning rate to 0.01
exp5: train whole network, learning rate 0.01, 100 epochs
exp6: train whole network, learning rate 0.0002, 100 epochs
exp7: train whole network, learning rate 0.0002, 100 epochs, len16strd8lim600, window
exp8: same as exp6 but with BCELoss()
> added accuracy measurement
exp9: same as exp7 but with BCELoss(), 70 epochs
    validation accuracy stays around 50%. Not good. Not learning what a car crash looks like. Too low resolution (128x171->crop112x112)? Try object detector model?
> added TFPN measurements
exp10: same as exp8 (for accuracy)





cc1: training nspi 8
cc2: movement added? or maybe thats cc3
cc3: sample crash early with gaussian
cc4: validation nspi to 8. training to 2
rot30: add randomRotation(30)
rot30p2: val nspi to 128
rot30p3: lr to 0.0001
aug1: val nspi 32. t2.RandomHorizontalFlip(),
                   t2.RandomRotation(15),
                   t2.RandomChannelPermutation(),
                   t2.RandomInvert(),
                   t2.GaussianBlur(kernel_size=(5,9), sigma=(0.1, 2.0))
aug2: num workers to 8 (was 4). rm channelPermutation and RandomInvert. lr to 0.0002
aug3: nframes=32
aug4: nframes=48. removed videos 437022 436703 436814 (nframes<48)
aug5: nframes=32. readded above videos. added normal videos
aug6: nframes=48. removed videos 437022 436703 436814 (nframes<48)
